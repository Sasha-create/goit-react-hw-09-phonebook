{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/store.js","routes.js","components/Navigation/Navigation.js","components/UserMenu/goat.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/Loader/Loader.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-reducer.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Container/Container.js","components/AppBar/AppBar.module.css","components/Loader/Loader.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","operations","register","credentials","dispatch","a","post","response","data","message","logOut","logIn","console","log","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","routes","connect","authSelectors","to","exact","className","s","link","activeClassName","activeLink","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","container","src","alt","width","type","onClick","AuthNav","header","Loading","loading","color","height","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","Container","fallback","path","autoClose","ReactDOM","mainStore","document","getElementById","module","exports","items","fetchContactSuccess","addContactSuccess","removeContactSuccess","filter","id","fetchContactRequest","fetchContactError","addContactRequest","addContactError","removeContactRequest","removeContactError","changeFilter","fetchContacts","actions","addContact","number","contact","removeContact","contactId","delete","getFilter","getAllContacts","getLoading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","children"],"mappings":"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","file":"static/js/main.0d1e636e.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import axios from 'axios';\n// import { createAsyncThunk } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n\n    console.log(response.data);\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  getCurrentUser,\n  // fetchCurrentUser,\n};\nexport default operations;\n\n// через -- //createAsyncThunk//\n\n// const register = createAsyncThunk('auth/register', async credentials => {\n//   try {\n//     const { data } = await axios.post('/users/signup', credentials);\n//     token.set(data.token);\n//     return data;\n//   } catch (error) {\n//     // CONTACT: Добавить обработку ошибки error.message\n//   }\n// });\n\n/////////////////////////////////////////\n// const logIn = createAsyncThunk('auth/login', async credentials => {\n//   try {\n//     const { data } = await axios.post('/users/login', credentials);\n//     token.set(data.token);\n//     return data;\n//   } catch (error) {\n//     // CONTACT: Добавить обработку ошибки error.message\n//   }\n// });\n///////////////////////////////////////\n\n// const logOut = createAsyncThunk('auth/logout', async () => {\n//   try {\n//     await axios.post('/users/logout');\n//     token.unset();\n//   } catch (error) {\n//     // CONTACT: Добавить обработку ошибки error.message\n//   }\n// });\n\n//////////////////////////////////////////\n// const fetchCurrentUser = createAsyncThunk(\n//   'auth/refresh',\n//   async (_, thunkAPI) => {\n//     const state = thunkAPI.getState();\n//     const persistedToken = state.auth.token;\n\n//     if (persistedToken === null) {\n//       console.log('Токена нет, уходим из fetchCurrentUser');\n//       return thunkAPI.rejectWithValue();\n//     }\n\n//     token.set(persistedToken);\n//     try {\n//       const { data } = await axios.get('/users/current');\n//       return data;\n//     } catch (error) {\n//       // CONTACT: Добавить обработку ошибки error.message\n//     }\n//   },\n// );\n///////////////////////////////////////\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default {\n  store,\n  persistor,\n};\n","export const routes = {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  contacts: '/contacts',\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { routes } from '../../routes';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport s from './Navigation.module.css';\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink\n      to={routes.home}\n      exact\n      className={s.link}\n      activeClassName={s.activeLink}\n    >\n      Главная\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to={routes.contacts}\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Контакты\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/goat.ba7d2a31.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport s from './UserMenu.module.css';\nimport defaultAvatar from './goat.png';\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className={s.container}>\n    <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\n    <span className={s.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { routes } from '../../routes';\nimport s from './AuthNav.module.css';\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to={routes.register}\n      exact\n      className={s.link}\n      activeClassName={s.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to={routes.login}\n      exact\n      className={s.link}\n      activeClassName={s.activeLink}\n    >\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport s from './AppBar.module.css';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\nimport { authSelectors } from '../../redux/auth';\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header className={s.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import Loader from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nexport default function Loading() {\n  return (\n    <div className={s.loading}>\n      <Loader\n        className=\"status\"\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport AppBar from './components/AppBar';\nimport { routes } from './routes';\nimport Loader from './components/Loader';\nimport Container from './components/Container';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView/HomeView.js' /* webpackChunkName: \"HomeView\" */),\n);\nconst RegisterView = lazy(() =>\n  import(\n    './views/RegisterView/RegisterView.js' /* webpackChunkName: \"RegisterView\" */\n  ),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView/LoginView.js' /* webpackChunkName: \"LoginView\" */),\n);\n\nconst ContactsView = lazy(() =>\n  import(\n    './views/ContactsView/ContactsView.js' /* webpackChunkName: \"ContactsView\" */\n  ),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <PublicRoute exact path={routes.home} component={HomeView} />\n            <PublicRoute\n              exact\n              path={routes.register}\n              restricted\n              redirectTo={routes.contacts}\n              component={RegisterView}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo={routes.contacts}\n              component={LoginView}\n            />\n            <PrivateRoute\n              path={routes.contacts}\n              redirectTo={routes.login}\n              component={ContactsView}\n            />\n            <PublicRoute component={HomeView} />\n          </Switch>\n        </Suspense>\n        <ToastContainer autoClose={3000} />\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport mainStore from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={mainStore.store}>\n    <PersistGate loading={null} persistor={mainStore.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__q4-Eq\",\"activeLink\":\"Navigation_activeLink__1Yt21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2-qiB\",\"activeLink\":\"AuthNav_activeLink__2LbT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__36vfR\",\"avatar\":\"UserMenu_avatar__2Nm1R\",\"name\":\"UserMenu_name__1KPV3\"};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [removeContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [removeContactRequest]: () => true,\n  [removeContactSuccess]: () => false,\n  [removeContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","// import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport * as actions from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(actions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactError(error.message));\n  }\n\n  //  Синхронный запрос   ///\n\n  // axios\n  //   .get('/contacts')\n  //   .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\n  //   .catch(error => dispatch(actions.fetchContactError(error)));\n};\n\n//     Если делать через -- //createAsyncThunk//\n\n// const fetchContactsAsync = createAsyncThunk(\n//   'contacts/fetchContacts',\n//   async () => {\n//     const { data } = await axios.get('/contacts');\n//     return await data;\n//   },\n// );\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(actions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.addContactError(error.message));\n  }\n};\n\nconst removeContact = contactId => async dispatch => {\n  dispatch(actions.removeContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(actions.removeContactSuccess(contactId));\n  } catch (error) {\n    dispatch(actions.removeContactError(error.message));\n  }\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  removeContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport default {\n  getLoading,\n  getFilter,\n  getAllContacts,\n  getVisibleContacts,\n};\n","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__NyB4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loader_loading__pfOhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2tkVT\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const removeContactRequest = createAction(\n  'contacts/removeContactRequest',\n);\nexport const removeContactSuccess = createAction(\n  'contacts/removeContactSuccess',\n);\nexport const removeContactError = createAction('contacts/removeContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n"],"sourceRoot":""}